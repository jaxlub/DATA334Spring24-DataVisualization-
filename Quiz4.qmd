---
title: "Quiz4"
author: "Jax Lubkowitz"
format: 
  html:
    embed-resources: true
---

**Statement of Integrity**: \"All work presented is my own, and I have followed all rules for collaboration. I have **not** used any AI for this assignment.\"

Jax Lubkowitz

# Question 1
```{r}
library(tidyverse)
library(rvest)
url <- "https://en.wikipedia.org/wiki/List_of_Wimbledon_gentlemen%27s_singles_champions"
tennis_tables <- read_html(url) |>
  html_nodes("table")
wimbledon_df <- tennis_tables[[4]] |> html_table() |>
  select(-Country) |>
  rename(year = `Year[d]`,
         runner_up = `Runner-up`,
         champion = Champion) |>
  filter(year >= 2004) |>
  mutate(player1 = if_else(champion > runner_up,
                           true = runner_up,
                           false = champion),
         player2 = if_else(champion > runner_up,
                           true = champion,
                           false = runner_up)) |>
  select(-champion, -runner_up) |>
  filter(player1 != "No competition (due to COVID-19 pandemic)[6]")

wimbledon_df
```

```{r}
library(tidygraph)



wimbledon_sum <- wimbledon_df |> mutate(player_first = if_else(player1 > player2,
                                           true = player2,
                                           false = player1),
                     player_second = if_else(player1 > player2,
                                            true = player1,
                                            false = player2)) |>
  dplyr::select(-player1, -player2) |>
  group_by(player_first, player_second) |>
  summarise(n_games = n())



nodes <- wimbledon_df |> pivot_longer(c(player1, player2),
                             names_to = "player_num",
                             values_to = "player") |>
  distinct(player) |>
  rowid_to_column("id") |>
  rename(label = player) |> 
  mutate(big3 = if_else(label %in% c("Roger Federer","Rafael Nadal","Novak Djokovic"), true = TRUE, false = FALSE))


edges <- left_join(wimbledon_sum, nodes, by = join_by(player_first == label)) |>
  rename(from = "id") |>
  left_join(nodes, by = join_by(player_second == label)) |>
  rename(to = "id") |>
  ungroup() |>
  dplyr::select(to, from, n_games)


wimbeldon_obj <- tbl_graph(nodes = nodes, edges = edges, directed = FALSE)


library(ggraph)

ggraph(wimbeldon_obj |> mutate(centrality = centrality_authority()),
                            layout = "stress") +
  geom_edge_link(aes(width = n_games), alpha = 0.7, show.legend = FALSE) +
  geom_node_point(aes(colour = big3,
                      size = centrality), show.legend = TRUE) +
  scale_edge_width(range = c(0.5, 3)) +
  geom_node_text(aes(label = label), repel = TRUE) +
  scale_color_viridis_d() +
  guides(size = "none")
  # Couldnt get n_games to disappear with different guide inputs... 
  # couldn't get it during class example either :)

```

